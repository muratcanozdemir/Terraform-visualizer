name: Deploy to AWS

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  id-token: write
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build the package
        run: python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
  deploy_to_aws_ecs_fargate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{secrets.ACCOUNT_ID}}:role/${{secrets.OIDC_ROLE}}
          aws-region: ${{secrets.AWS_REGION}}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
          pip install -r requirements.txt
      - name: Build and push Docker image
        run: |
          aws ecr get-login-password --region ${{secrets.AWS_REGION}} | docker login --username AWS --password-stdin ${{secrets.ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com
          docker build -t terraform-state-visualizer .
          docker tag terraform-state-visualizer:latest ${{secrets.ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/terraform-state-visualizer:latest
          docker push ${{secrets.ACCOUNT_ID}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/terraform-state-visualizer:latest
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Initialize Terraform
        run: terraform -chdir=terraform/ init
      - name: Apply Terraform
        run: terraform -chdir=terraform/ apply -var-file=config.tfvars -auto-approve
